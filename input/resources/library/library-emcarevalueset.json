{
    "resourceType": "Library",
    "id": "emcarevalueset",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset",
    "version": "1.0.2",
    "name": "emcarevalueset",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcarevalueset.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}